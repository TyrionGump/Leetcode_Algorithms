# 思路: 遇到重复的字符找出之前这个重复字符在check list中的位置, 然后把第一个重复字符后的所有字符复制给下一个回合.
# 时间复杂度: O(n^2)
# 运算时间:60 ms 运算内存:14.2 MB
class Solution:
    def lengthOfLongestSubstring(self, s: str) -> int:
        check_list = []
        max_num = 0
        current_num = 0
        
        current_str = s
        for i in current_str:
            if i not in check_list:
                check_list.append(i)
                current_num += 1
            else:
                if current_num > max_num:
                    max_num = current_num
                repeat_idx = check_list.index(i)
                check_list = check_list[(repeat_idx + 1):]
                check_list.append(i)
                current_num = len(check_list)
                
        if current_num > max_num:
            max_num = current_num
        
        return max_num
